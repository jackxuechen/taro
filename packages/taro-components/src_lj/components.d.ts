/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Danmu } from "./components/video/video-danmu";
export namespace Components {
    interface MyTaroVideoControl {
        "controls": boolean;
        "currentTime": number;
        "duration": number;
        "getIsDraggingProgressBall": () => Promise<boolean>;
        "isPlaying": boolean;
        "pauseFunc": () => void;
        "playFunc": () => void;
        "seekFunc": (position: number) => void;
        "setCurrentTime": (time: number) => Promise<void>;
        "setProgressBall": (percentage: number) => Promise<void>;
        "showPlayBtn": boolean;
        "showProgress": boolean;
        "toggleVisibility": (nextVisible?: boolean | undefined) => Promise<void>;
    }
    interface MyTaroVideoControlTitle {
        "controls": boolean;
        "isPlaying": boolean;
        "title": string;
        "toggleVisibility": (nextVisible?: boolean | undefined) => Promise<void>;
    }
    interface MyTaroVideoCore {
        /**
          * 是否自动播放
         */
        "autoplay": boolean;
        /**
          * 是否显示默认播放控件（播放/暂停按钮、播放进度、时间）
         */
        "controls": boolean;
        /**
          * 是否显示弹幕按钮
         */
        "danmuBtn": boolean;
        /**
          * 弹幕列表
         */
        "danmuList": [];
        /**
          * 指定视频时长
         */
        "duration": number;
        /**
          * 是否展示弹幕
         */
        "enableDanmu": boolean;
        /**
          * 是否开启播放手势，即双击切换播放/暂停
         */
        "enablePlayGesture": boolean;
        /**
          * 是否开启控制进度的手势
         */
        "enableProgressGesture": boolean;
        /**
          * 指定视频初始播放位置
         */
        "initialTime": number;
        /**
          * 是否循环播放
         */
        "loop": boolean;
        /**
          * 是否静音播放
         */
        "muted": boolean;
        /**
          * 当视频大小与 video 容器大小不一致时，视频的表现形式
         */
        "objectFit": 'contain' | 'fill' | 'cover';
        /**
          * 暂停视频
         */
        "pause": () => Promise<void>;
        /**
          * 播放视频
         */
        "play": () => Promise<void>;
        /**
          * 视频封面的图片网络资源地址或云文件ID（2.3.0）。若 controls 属性值为 false 则设置 poster 无效
         */
        "poster": string;
        /**
          * 跳转到指定位置
         */
        "seek": (position: number) => Promise<void>;
        /**
          * 是否显示视频中间的播放按钮
         */
        "showCenterPlayBtn": boolean;
        /**
          * 是否显示全屏按钮
         */
        "showFullscreenBtn": boolean;
        /**
          * 是否显示静音按钮
         */
        "showMuteBtn": boolean;
        /**
          * 是否显示视频底部控制栏的播放按钮
         */
        "showPlayBtn": boolean;
        /**
          * 若不设置，宽度大于 240 时才会显示
         */
        "showProgress": boolean;
        /**
          * 要播放视频的资源地址
         */
        "src": string;
        /**
          * 停止视频
         */
        "stop": () => Promise<void>;
        /**
          * 标题
         */
        "title": any;
        /**
          * 在非全屏模式下，是否开启亮度与音量调节手势
         */
        "vslideGesture": boolean;
        /**
          * 在全屏模式下，是否开启亮度与音量调节手势
         */
        "vslideGestureInFullscreen": boolean;
    }
    interface MyTaroVideoDanmu {
        "enable": boolean;
        "sendDanmu": (danmuList?: Partial<Danmu> | Partial<Danmu>[]) => Promise<void>;
        "tick": (currentTime: number) => Promise<void>;
    }
}
declare global {
    interface HTMLMyTaroVideoControlElement extends Components.MyTaroVideoControl, HTMLStencilElement {
    }
    var HTMLMyTaroVideoControlElement: {
        prototype: HTMLMyTaroVideoControlElement;
        new (): HTMLMyTaroVideoControlElement;
    };
    interface HTMLMyTaroVideoControlTitleElement extends Components.MyTaroVideoControlTitle, HTMLStencilElement {
    }
    var HTMLMyTaroVideoControlTitleElement: {
        prototype: HTMLMyTaroVideoControlTitleElement;
        new (): HTMLMyTaroVideoControlTitleElement;
    };
    interface HTMLMyTaroVideoCoreElement extends Components.MyTaroVideoCore, HTMLStencilElement {
    }
    var HTMLMyTaroVideoCoreElement: {
        prototype: HTMLMyTaroVideoCoreElement;
        new (): HTMLMyTaroVideoCoreElement;
    };
    interface HTMLMyTaroVideoDanmuElement extends Components.MyTaroVideoDanmu, HTMLStencilElement {
    }
    var HTMLMyTaroVideoDanmuElement: {
        prototype: HTMLMyTaroVideoDanmuElement;
        new (): HTMLMyTaroVideoDanmuElement;
    };
    interface HTMLElementTagNameMap {
        "my-taro-video-control": HTMLMyTaroVideoControlElement;
        "my-taro-video-control-title": HTMLMyTaroVideoControlTitleElement;
        "my-taro-video-core": HTMLMyTaroVideoCoreElement;
        "my-taro-video-danmu": HTMLMyTaroVideoDanmuElement;
    }
}
declare namespace LocalJSX {
    interface MyTaroVideoControl {
        "controls"?: boolean;
        "currentTime"?: number;
        "duration"?: number;
        "isPlaying"?: boolean;
        "pauseFunc"?: () => void;
        "playFunc"?: () => void;
        "seekFunc"?: (position: number) => void;
        "showPlayBtn"?: boolean;
        "showProgress"?: boolean;
    }
    interface MyTaroVideoControlTitle {
        "controls"?: boolean;
        "isPlaying"?: boolean;
        "title"?: string;
    }
    interface MyTaroVideoCore {
        /**
          * 是否自动播放
         */
        "autoplay"?: boolean;
        /**
          * 是否显示默认播放控件（播放/暂停按钮、播放进度、时间）
         */
        "controls"?: boolean;
        /**
          * 是否显示弹幕按钮
         */
        "danmuBtn"?: boolean;
        /**
          * 弹幕列表
         */
        "danmuList"?: [];
        /**
          * 指定视频时长
         */
        "duration"?: number;
        /**
          * 是否展示弹幕
         */
        "enableDanmu"?: boolean;
        /**
          * 是否开启播放手势，即双击切换播放/暂停
         */
        "enablePlayGesture"?: boolean;
        /**
          * 是否开启控制进度的手势
         */
        "enableProgressGesture"?: boolean;
        /**
          * 指定视频初始播放位置
         */
        "initialTime"?: number;
        /**
          * 是否循环播放
         */
        "loop"?: boolean;
        /**
          * 是否静音播放
         */
        "muted"?: boolean;
        /**
          * 当视频大小与 video 容器大小不一致时，视频的表现形式
         */
        "objectFit"?: 'contain' | 'fill' | 'cover';
        "onEnded"?: (event: CustomEvent<any>) => void;
        "onError"?: (event: CustomEvent<any>) => void;
        "onFullscreenchange"?: (event: CustomEvent<any>) => void;
        "onLoadedmetadata"?: (event: CustomEvent<any>) => void;
        "onPause"?: (event: CustomEvent<any>) => void;
        "onPlay"?: (event: CustomEvent<any>) => void;
        "onProgress"?: (event: CustomEvent<any>) => void;
        "onTimeupdate"?: (event: CustomEvent<any>) => void;
        /**
          * 视频封面的图片网络资源地址或云文件ID（2.3.0）。若 controls 属性值为 false 则设置 poster 无效
         */
        "poster"?: string;
        /**
          * 是否显示视频中间的播放按钮
         */
        "showCenterPlayBtn"?: boolean;
        /**
          * 是否显示全屏按钮
         */
        "showFullscreenBtn"?: boolean;
        /**
          * 是否显示静音按钮
         */
        "showMuteBtn"?: boolean;
        /**
          * 是否显示视频底部控制栏的播放按钮
         */
        "showPlayBtn"?: boolean;
        /**
          * 若不设置，宽度大于 240 时才会显示
         */
        "showProgress"?: boolean;
        /**
          * 要播放视频的资源地址
         */
        "src"?: string;
        /**
          * 标题
         */
        "title"?: any;
        /**
          * 在非全屏模式下，是否开启亮度与音量调节手势
         */
        "vslideGesture"?: boolean;
        /**
          * 在全屏模式下，是否开启亮度与音量调节手势
         */
        "vslideGestureInFullscreen"?: boolean;
    }
    interface MyTaroVideoDanmu {
        "enable"?: boolean;
    }
    interface IntrinsicElements {
        "my-taro-video-control": MyTaroVideoControl;
        "my-taro-video-control-title": MyTaroVideoControlTitle;
        "my-taro-video-core": MyTaroVideoCore;
        "my-taro-video-danmu": MyTaroVideoDanmu;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-taro-video-control": LocalJSX.MyTaroVideoControl & JSXBase.HTMLAttributes<HTMLMyTaroVideoControlElement>;
            "my-taro-video-control-title": LocalJSX.MyTaroVideoControlTitle & JSXBase.HTMLAttributes<HTMLMyTaroVideoControlTitleElement>;
            "my-taro-video-core": LocalJSX.MyTaroVideoCore & JSXBase.HTMLAttributes<HTMLMyTaroVideoCoreElement>;
            "my-taro-video-danmu": LocalJSX.MyTaroVideoDanmu & JSXBase.HTMLAttributes<HTMLMyTaroVideoDanmuElement>;
        }
    }
}
